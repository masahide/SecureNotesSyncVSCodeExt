{
  "name": "secure-notes-sync",
  "displayName": "Secure Notes Sync",
  "description": "A VSCode extension for securely syncing notes with a GitHub repository.",
  "version": "2025.6.292204",
  "publisher": "MasahideYAMASAKI",
  "engines": {
    "vscode": "^1.96.0"
  },
  "categories": [
    "Other"
  ],
  "repository": {
    "type": "git",
    "url": "https://github.com/masahide/SecureNotesSyncVSCodeExt.git"
  },
  "main": "./dist/extension.js",
  "activationEvents": [
    "workspaceContains:.secureNotes/wsIndex.json"
  ],
  "contributes": {
    "viewsContainers": {
      "activitybar": [
        {
          "id": "secureNotesBranches",
          "title": "Secure Notes Branches",
          "icon": "./assets/secure-note.svg"
        }
      ]
    },
    "views": {
      "secureNotesBranches": [
        {
          "id": "secureNotesBranchesView",
          "name": "Branches"
        }
      ]
    },
    "menus": {
      "view/item/context": [
        {
          "command": "extension.createBranchFromIndex",
          "when": "view == secureNotesBranchesView && viewItem == indexItem"
        },
        {
          "command": "extension.checkoutBranch",
          "when": "view == secureNotesBranchesView && viewItem == branchItem"
        }
      ]
    },
    "configuration": {
      "type": "object",
      "title": "Secure Notes Sync",
      "properties": {
        "SecureNotesSync.gitRemoteUrl": {
          "type": "string",
          "description": "GitHub repository URL for syncing the object directory. (ex: git@github.com:user/repo.git)",
          "default": "git@github.com:user/repo.git"
        },
        "SecureNotesSync.enableAutoSync": {
          "type": "boolean",
          "description": "Enable auto sync on save",
          "default": false
        },
        "SecureNotesSync.inactivityTimeoutSec": {
          "type": "number",
          "description": "Inactivity timeout in seconds for triggering sync when the window is refocused",
          "default": 60
        },
        "SecureNotesSync.saveSyncTimeoutSec": {
          "type": "number",
          "description": "Timeout in seconds after file save before triggering sync",
          "default": 5
        },
        "SecureNotesSync.onePasswordUri": {
          "type": "string",
          "description": "If set to an op://â€¦ URI, the AES encryption key will be retrieved via 1Password CLI",
          "default": ""
        },
        "SecureNotesSync.onePasswordAccount": {
          "type": "string",
          "description": "(Optional) The 1Password account name to use with the op CLI",
          "default": ""
        },
        "SecureNotesSync.onePasswordCacheTimeout": {
          "type": "string",
          "description": "Cache timeout for the AES encryption key retrieved via 1Password (e.g., '1h', '30m', '2d')",
          "default": "30d"
        }
      }
    },
    "commands": [
      {
        "command": "extension.initializeRepository",
        "title": "Secure Notes: Initialize Repository"
      },
      {
        "command": "extension.syncNotes",
        "title": "Secure Notes: Sync with Remote Repository"
      },
      {
        "command": "extension.generateAESKey",
        "title": "Secure Notes: Generate New AES Key"
      },
      {
        "command": "extension.copyAESKeyToClipboard",
        "title": "Secure Notes: Copy AES Key to Clipboard"
      },
      {
        "command": "extension.setAESKey",
        "title": "Secure Notes: Set AES Key Manually"
      },
      {
        "command": "extension.refreshAESKey",
        "title": "Secure Notes: Refresh AES Key from 1Password"
      },
      {
        "command": "extension.insertCurrentTime",
        "title": "Secure Notes: Insert Current Time"
      },
      {
        "command": "extension.createBranchFromIndex",
        "title": "Secure Notes: Create Branch from Index"
      },
      {
        "command": "extension.checkoutBranch",
        "title": "Secure Notes: Checkout Branch"
      }
    ]
  },
  "scripts": {
    "vscode:prepublish": "pnpm run package",
    "compile": "webpack",
    "watch": "webpack --watch",
    "package": "webpack --mode production --devtool hidden-source-map",
    "compile-tests": "tsc -p . --outDir out",
    "watch-tests": "tsc -p . -w --outDir out",
    "pretest": "pnpm run compile-tests && pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "xvfb-run -a vscode-test",
    "test:headless": "xvfb-run -a vscode-test",
    "test:local": "vscode-test",
    "test:sync": "pnpm run compile-tests && node ./out/test/alternative-test-runner.js",
    "test:incremental": "pnpm run compile-tests && pnpm run compile",
    "test:unit": "tsx src/test/unit-test.ts",
    "test:fast": "pnpm run test:unit && pnpm run lint"
  },
  "devDependencies": {
    "@types/mocha": "^10.0.10",
    "@types/node": "22.x",
    "@types/vscode": "^1.96.0",
    "@types/which": "^3.0.4",
    "@typescript-eslint/eslint-plugin": "^8.20.0",
    "@typescript-eslint/parser": "^8.20.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "eslint": "^9.18.0",
    "ts-loader": "^9.5.2",
    "tsx": "^4.20.3",
    "typescript": "^5.7.3",
    "webpack": "^5.97.1",
    "webpack-cli": "^6.0.1"
  },
  "dependencies": {
    "uuid": "^11.0.5",
    "which": "^5.0.0"
  }
}
